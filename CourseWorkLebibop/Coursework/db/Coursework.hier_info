|Coursework
c_M <= create_output_tact:inst12.c_M
c => inst5.IN0
d_s[0] <= lpm_shiftreg1:inst19.q[0]
d_s[1] <= lpm_shiftreg1:inst19.q[1]
d_s[2] <= lpm_shiftreg1:inst19.q[2]
speed => lpm_shiftreg1:inst19.load
speed => lpm_shiftreg1:inst19.enable
reset => inst4.IN0
reset => create_ready_signal_reg:inst16.reset
reset => lpm_shiftreg0:inst17.aclr
reset => lpm_shiftreg2:inst20.aclr
stop => create_ready_signal_reg:inst16.stop
stop => inst6.IN0
start => lpm_shiftreg1:inst19.data[2]
x[0] => lpm_shiftreg1:inst19.data[0]
x[0] => lpm_shiftreg2:inst20.data[0]
x[1] => lpm_shiftreg1:inst19.data[1]
x[1] => lpm_shiftreg2:inst20.data[1]
x[2] => lpm_shiftreg2:inst20.data[2]
x[3] => lpm_shiftreg2:inst20.data[3]
x[4] => lpm_shiftreg2:inst20.data[4]
x[5] => lpm_shiftreg2:inst20.data[5]
x[6] => lpm_shiftreg2:inst20.data[6]
x[7] => lpm_shiftreg2:inst20.data[7]
x[8] => lpm_shiftreg2:inst20.data[8]
x[9] => lpm_shiftreg2:inst20.data[9]
x[10] => lpm_shiftreg2:inst20.data[10]
x[11] => lpm_shiftreg2:inst20.data[11]
ready <= create_ready_signal_reg:inst16.ready
serial_code <= lpm_shiftreg0:inst17.shiftout
data[0] <= lpm_constant1:inst11.result[0]
data[1] <= lpm_shiftreg2:inst20.q[0]
data[2] <= lpm_shiftreg2:inst20.q[1]
data[3] <= lpm_shiftreg2:inst20.q[2]
data[4] <= lpm_shiftreg2:inst20.q[3]
data[5] <= lpm_shiftreg2:inst20.q[4]
data[6] <= lpm_shiftreg2:inst20.q[5]
data[7] <= lpm_shiftreg2:inst20.q[6]
data[8] <= lpm_shiftreg2:inst20.q[7]
data[9] <= lpm_shiftreg2:inst20.q[8]
data[10] <= lpm_shiftreg2:inst20.q[9]
data[11] <= lpm_shiftreg2:inst20.q[10]
data[12] <= lpm_shiftreg2:inst20.q[11]
data[13] <= add_parity_bit_n13:inst.data_13
data[14] <= lpm_constant0:inst9.result[0]
load => lpm_shiftreg2:inst20.load
load => lpm_shiftreg2:inst20.enable


|Coursework|create_output_tact:inst12
c_M <= lpm_mux0:inst.result
c => lpm_mux0:inst.data2
c => inst4.CLK
c => inst3.CLK
c => inst5.CLK
x[0] => lpm_mux0:inst.sel[0]
x[1] => lpm_mux0:inst.sel[1]


|Coursework|create_output_tact:inst12|lpm_mux0:inst
data0 => LPM_MUX:LPM_MUX_component.DATA[0][0]
data1 => LPM_MUX:LPM_MUX_component.DATA[1][0]
data2 => LPM_MUX:LPM_MUX_component.DATA[2][0]
sel[0] => LPM_MUX:LPM_MUX_component.SEL[0]
sel[1] => LPM_MUX:LPM_MUX_component.SEL[1]
result <= LPM_MUX:LPM_MUX_component.RESULT[0]


|Coursework|create_output_tact:inst12|lpm_mux0:inst|LPM_MUX:LPM_MUX_component
data[0][0] => mux_23e:auto_generated.data[0]
data[1][0] => mux_23e:auto_generated.data[1]
data[2][0] => mux_23e:auto_generated.data[2]
sel[0] => mux_23e:auto_generated.sel[0]
sel[1] => mux_23e:auto_generated.sel[1]
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= mux_23e:auto_generated.result[0]


|Coursework|create_output_tact:inst12|lpm_mux0:inst|LPM_MUX:LPM_MUX_component|mux_23e:auto_generated
data[0] => data0_wire[0].IN0
data[1] => data1_wire[0].IN0
data[2] => data2_wire[0].IN0
result[0] <= result_node[0].DB_MAX_OUTPUT_PORT_TYPE
sel[0] => data0_wire[0].IN0
sel[0] => data1_wire[0].IN1
sel[1] => data2_wire[0].IN1
sel[1] => _.IN0


|Coursework|create_output_tact:inst12|lpm_constant0:inst7
result[0] <= lpm_constant:LPM_CONSTANT_component.result[0]


|Coursework|create_output_tact:inst12|lpm_constant0:inst7|lpm_constant:LPM_CONSTANT_component
result[0] <= <VCC>


|Coursework|lpm_shiftreg1:inst19
aclr => lpm_shiftreg:LPM_SHIFTREG_component.aclr
clock => lpm_shiftreg:LPM_SHIFTREG_component.clock
data[0] => lpm_shiftreg:LPM_SHIFTREG_component.data[0]
data[1] => lpm_shiftreg:LPM_SHIFTREG_component.data[1]
data[2] => lpm_shiftreg:LPM_SHIFTREG_component.data[2]
enable => lpm_shiftreg:LPM_SHIFTREG_component.enable
load => lpm_shiftreg:LPM_SHIFTREG_component.load
q[0] <= lpm_shiftreg:LPM_SHIFTREG_component.q[0]
q[1] <= lpm_shiftreg:LPM_SHIFTREG_component.q[1]
q[2] <= lpm_shiftreg:LPM_SHIFTREG_component.q[2]


|Coursework|lpm_shiftreg1:inst19|lpm_shiftreg:LPM_SHIFTREG_component
data[0] => _.IN1
data[1] => _.IN1
data[2] => _.IN1
clock => dffs[2].CLK
clock => dffs[1].CLK
clock => dffs[0].CLK
enable => dffs[2].ENA
enable => dffs[1].ENA
enable => dffs[0].ENA
shiftin => _.IN1
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
aclr => dffs[2].IN0
aset => ~NO_FANOUT~
sclr => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
q[0] <= dffs[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= dffs[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= dffs[2].DB_MAX_OUTPUT_PORT_TYPE
shiftout <= shiftout.DB_MAX_OUTPUT_PORT_TYPE


|Coursework|create_ready_signal_reg:inst16
first <= lpm_decode0:inst2.eq0
c_M => lpm_counter0:inst1.clock
stop => inst6.IN0
reset => inst5.IN0
finish <= lpm_decode0:inst2.eq16
ready <= inst4.DB_MAX_OUTPUT_PORT_TYPE


|Coursework|create_ready_signal_reg:inst16|lpm_decode0:inst2
data[0] => lpm_decode:LPM_DECODE_component.data[0]
data[1] => lpm_decode:LPM_DECODE_component.data[1]
data[2] => lpm_decode:LPM_DECODE_component.data[2]
data[3] => lpm_decode:LPM_DECODE_component.data[3]
data[4] => lpm_decode:LPM_DECODE_component.data[4]
eq0 <= lpm_decode:LPM_DECODE_component.eq[0]
eq1 <= lpm_decode:LPM_DECODE_component.eq[1]
eq10 <= lpm_decode:LPM_DECODE_component.eq[10]
eq11 <= lpm_decode:LPM_DECODE_component.eq[11]
eq12 <= lpm_decode:LPM_DECODE_component.eq[12]
eq13 <= lpm_decode:LPM_DECODE_component.eq[13]
eq14 <= lpm_decode:LPM_DECODE_component.eq[14]
eq15 <= lpm_decode:LPM_DECODE_component.eq[15]
eq16 <= lpm_decode:LPM_DECODE_component.eq[16]
eq17 <= lpm_decode:LPM_DECODE_component.eq[17]
eq18 <= lpm_decode:LPM_DECODE_component.eq[18]
eq19 <= lpm_decode:LPM_DECODE_component.eq[19]
eq2 <= lpm_decode:LPM_DECODE_component.eq[2]
eq20 <= lpm_decode:LPM_DECODE_component.eq[20]
eq21 <= lpm_decode:LPM_DECODE_component.eq[21]
eq22 <= lpm_decode:LPM_DECODE_component.eq[22]
eq23 <= lpm_decode:LPM_DECODE_component.eq[23]
eq24 <= lpm_decode:LPM_DECODE_component.eq[24]
eq25 <= lpm_decode:LPM_DECODE_component.eq[25]
eq26 <= lpm_decode:LPM_DECODE_component.eq[26]
eq27 <= lpm_decode:LPM_DECODE_component.eq[27]
eq28 <= lpm_decode:LPM_DECODE_component.eq[28]
eq29 <= lpm_decode:LPM_DECODE_component.eq[29]
eq3 <= lpm_decode:LPM_DECODE_component.eq[3]
eq30 <= lpm_decode:LPM_DECODE_component.eq[30]
eq31 <= lpm_decode:LPM_DECODE_component.eq[31]
eq4 <= lpm_decode:LPM_DECODE_component.eq[4]
eq5 <= lpm_decode:LPM_DECODE_component.eq[5]
eq6 <= lpm_decode:LPM_DECODE_component.eq[6]
eq7 <= lpm_decode:LPM_DECODE_component.eq[7]
eq8 <= lpm_decode:LPM_DECODE_component.eq[8]
eq9 <= lpm_decode:LPM_DECODE_component.eq[9]


|Coursework|create_ready_signal_reg:inst16|lpm_decode0:inst2|lpm_decode:LPM_DECODE_component
data[0] => decode_b8f:auto_generated.data[0]
data[1] => decode_b8f:auto_generated.data[1]
data[2] => decode_b8f:auto_generated.data[2]
data[3] => decode_b8f:auto_generated.data[3]
data[4] => decode_b8f:auto_generated.data[4]
enable => ~NO_FANOUT~
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
eq[0] <= decode_b8f:auto_generated.eq[0]
eq[1] <= decode_b8f:auto_generated.eq[1]
eq[2] <= decode_b8f:auto_generated.eq[2]
eq[3] <= decode_b8f:auto_generated.eq[3]
eq[4] <= decode_b8f:auto_generated.eq[4]
eq[5] <= decode_b8f:auto_generated.eq[5]
eq[6] <= decode_b8f:auto_generated.eq[6]
eq[7] <= decode_b8f:auto_generated.eq[7]
eq[8] <= decode_b8f:auto_generated.eq[8]
eq[9] <= decode_b8f:auto_generated.eq[9]
eq[10] <= decode_b8f:auto_generated.eq[10]
eq[11] <= decode_b8f:auto_generated.eq[11]
eq[12] <= decode_b8f:auto_generated.eq[12]
eq[13] <= decode_b8f:auto_generated.eq[13]
eq[14] <= decode_b8f:auto_generated.eq[14]
eq[15] <= decode_b8f:auto_generated.eq[15]
eq[16] <= decode_b8f:auto_generated.eq[16]
eq[17] <= decode_b8f:auto_generated.eq[17]
eq[18] <= decode_b8f:auto_generated.eq[18]
eq[19] <= decode_b8f:auto_generated.eq[19]
eq[20] <= decode_b8f:auto_generated.eq[20]
eq[21] <= decode_b8f:auto_generated.eq[21]
eq[22] <= decode_b8f:auto_generated.eq[22]
eq[23] <= decode_b8f:auto_generated.eq[23]
eq[24] <= decode_b8f:auto_generated.eq[24]
eq[25] <= decode_b8f:auto_generated.eq[25]
eq[26] <= decode_b8f:auto_generated.eq[26]
eq[27] <= decode_b8f:auto_generated.eq[27]
eq[28] <= decode_b8f:auto_generated.eq[28]
eq[29] <= decode_b8f:auto_generated.eq[29]
eq[30] <= decode_b8f:auto_generated.eq[30]
eq[31] <= decode_b8f:auto_generated.eq[31]


|Coursework|create_ready_signal_reg:inst16|lpm_decode0:inst2|lpm_decode:LPM_DECODE_component|decode_b8f:auto_generated
data[0] => w_anode116w[1].IN0
data[0] => w_anode127w[1].IN1
data[0] => w_anode137w[1].IN0
data[0] => w_anode147w[1].IN1
data[0] => w_anode157w[1].IN0
data[0] => w_anode167w[1].IN1
data[0] => w_anode177w[1].IN0
data[0] => w_anode17w[1].IN0
data[0] => w_anode187w[1].IN1
data[0] => w_anode208w[1].IN0
data[0] => w_anode219w[1].IN1
data[0] => w_anode229w[1].IN0
data[0] => w_anode239w[1].IN1
data[0] => w_anode249w[1].IN0
data[0] => w_anode259w[1].IN1
data[0] => w_anode269w[1].IN0
data[0] => w_anode279w[1].IN1
data[0] => w_anode300w[1].IN0
data[0] => w_anode311w[1].IN1
data[0] => w_anode321w[1].IN0
data[0] => w_anode331w[1].IN1
data[0] => w_anode341w[1].IN0
data[0] => w_anode34w[1].IN1
data[0] => w_anode351w[1].IN1
data[0] => w_anode361w[1].IN0
data[0] => w_anode371w[1].IN1
data[0] => w_anode44w[1].IN0
data[0] => w_anode54w[1].IN1
data[0] => w_anode64w[1].IN0
data[0] => w_anode74w[1].IN1
data[0] => w_anode84w[1].IN0
data[0] => w_anode94w[1].IN1
data[1] => w_anode116w[2].IN0
data[1] => w_anode127w[2].IN0
data[1] => w_anode137w[2].IN1
data[1] => w_anode147w[2].IN1
data[1] => w_anode157w[2].IN0
data[1] => w_anode167w[2].IN0
data[1] => w_anode177w[2].IN1
data[1] => w_anode17w[2].IN0
data[1] => w_anode187w[2].IN1
data[1] => w_anode208w[2].IN0
data[1] => w_anode219w[2].IN0
data[1] => w_anode229w[2].IN1
data[1] => w_anode239w[2].IN1
data[1] => w_anode249w[2].IN0
data[1] => w_anode259w[2].IN0
data[1] => w_anode269w[2].IN1
data[1] => w_anode279w[2].IN1
data[1] => w_anode300w[2].IN0
data[1] => w_anode311w[2].IN0
data[1] => w_anode321w[2].IN1
data[1] => w_anode331w[2].IN1
data[1] => w_anode341w[2].IN0
data[1] => w_anode34w[2].IN0
data[1] => w_anode351w[2].IN0
data[1] => w_anode361w[2].IN1
data[1] => w_anode371w[2].IN1
data[1] => w_anode44w[2].IN1
data[1] => w_anode54w[2].IN1
data[1] => w_anode64w[2].IN0
data[1] => w_anode74w[2].IN0
data[1] => w_anode84w[2].IN1
data[1] => w_anode94w[2].IN1
data[2] => w_anode116w[3].IN0
data[2] => w_anode127w[3].IN0
data[2] => w_anode137w[3].IN0
data[2] => w_anode147w[3].IN0
data[2] => w_anode157w[3].IN1
data[2] => w_anode167w[3].IN1
data[2] => w_anode177w[3].IN1
data[2] => w_anode17w[3].IN0
data[2] => w_anode187w[3].IN1
data[2] => w_anode208w[3].IN0
data[2] => w_anode219w[3].IN0
data[2] => w_anode229w[3].IN0
data[2] => w_anode239w[3].IN0
data[2] => w_anode249w[3].IN1
data[2] => w_anode259w[3].IN1
data[2] => w_anode269w[3].IN1
data[2] => w_anode279w[3].IN1
data[2] => w_anode300w[3].IN0
data[2] => w_anode311w[3].IN0
data[2] => w_anode321w[3].IN0
data[2] => w_anode331w[3].IN0
data[2] => w_anode341w[3].IN1
data[2] => w_anode34w[3].IN0
data[2] => w_anode351w[3].IN1
data[2] => w_anode361w[3].IN1
data[2] => w_anode371w[3].IN1
data[2] => w_anode44w[3].IN0
data[2] => w_anode54w[3].IN0
data[2] => w_anode64w[3].IN1
data[2] => w_anode74w[3].IN1
data[2] => w_anode84w[3].IN1
data[2] => w_anode94w[3].IN1
data[3] => w_anode106w[1].IN1
data[3] => w_anode198w[1].IN0
data[3] => w_anode290w[1].IN1
data[3] => w_anode3w[1].IN0
data[4] => w_anode106w[2].IN0
data[4] => w_anode198w[2].IN1
data[4] => w_anode290w[2].IN1
data[4] => w_anode3w[2].IN0
eq[0] <= w_anode17w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= w_anode34w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[2] <= w_anode44w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[3] <= w_anode54w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[4] <= w_anode64w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[5] <= w_anode74w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[6] <= w_anode84w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[7] <= w_anode94w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[8] <= w_anode116w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[9] <= w_anode127w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[10] <= w_anode137w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[11] <= w_anode147w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[12] <= w_anode157w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[13] <= w_anode167w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[14] <= w_anode177w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[15] <= w_anode187w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[16] <= w_anode208w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[17] <= w_anode219w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[18] <= w_anode229w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[19] <= w_anode239w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[20] <= w_anode249w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[21] <= w_anode259w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[22] <= w_anode269w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[23] <= w_anode279w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[24] <= w_anode300w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[25] <= w_anode311w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[26] <= w_anode321w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[27] <= w_anode331w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[28] <= w_anode341w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[29] <= w_anode351w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[30] <= w_anode361w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[31] <= w_anode371w[3].DB_MAX_OUTPUT_PORT_TYPE


|Coursework|create_ready_signal_reg:inst16|lpm_counter0:inst1
aclr => lpm_counter:LPM_COUNTER_component.aclr
clk_en => lpm_counter:LPM_COUNTER_component.clk_en
clock => lpm_counter:LPM_COUNTER_component.clock
q[0] <= lpm_counter:LPM_COUNTER_component.q[0]
q[1] <= lpm_counter:LPM_COUNTER_component.q[1]
q[2] <= lpm_counter:LPM_COUNTER_component.q[2]
q[3] <= lpm_counter:LPM_COUNTER_component.q[3]
q[4] <= lpm_counter:LPM_COUNTER_component.q[4]


|Coursework|create_ready_signal_reg:inst16|lpm_counter0:inst1|lpm_counter:LPM_COUNTER_component
clock => cntr_7ni:auto_generated.clock
clk_en => cntr_7ni:auto_generated.clk_en
cnt_en => ~NO_FANOUT~
updown => ~NO_FANOUT~
aclr => cntr_7ni:auto_generated.aclr
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
data[4] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_7ni:auto_generated.q[0]
q[1] <= cntr_7ni:auto_generated.q[1]
q[2] <= cntr_7ni:auto_generated.q[2]
q[3] <= cntr_7ni:auto_generated.q[3]
q[4] <= cntr_7ni:auto_generated.q[4]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|Coursework|create_ready_signal_reg:inst16|lpm_counter0:inst1|lpm_counter:LPM_COUNTER_component|cntr_7ni:auto_generated
aclr => counter_reg_bit1a[4].ACLR
aclr => counter_reg_bit1a[3].ACLR
aclr => counter_reg_bit1a[2].ACLR
aclr => counter_reg_bit1a[1].ACLR
aclr => counter_reg_bit1a[0].ACLR
clk_en => counter_reg_bit1a[4].IN0
clock => counter_reg_bit1a[4].CLK
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT
q[3] <= counter_reg_bit1a[3].REGOUT
q[4] <= counter_reg_bit1a[4].REGOUT


|Coursework|lpm_shiftreg0:inst17
aclr => lpm_shiftreg:LPM_SHIFTREG_component.aclr
aset => lpm_shiftreg:LPM_SHIFTREG_component.aset
clock => lpm_shiftreg:LPM_SHIFTREG_component.clock
data[0] => lpm_shiftreg:LPM_SHIFTREG_component.data[0]
data[1] => lpm_shiftreg:LPM_SHIFTREG_component.data[1]
data[2] => lpm_shiftreg:LPM_SHIFTREG_component.data[2]
data[3] => lpm_shiftreg:LPM_SHIFTREG_component.data[3]
data[4] => lpm_shiftreg:LPM_SHIFTREG_component.data[4]
data[5] => lpm_shiftreg:LPM_SHIFTREG_component.data[5]
data[6] => lpm_shiftreg:LPM_SHIFTREG_component.data[6]
data[7] => lpm_shiftreg:LPM_SHIFTREG_component.data[7]
data[8] => lpm_shiftreg:LPM_SHIFTREG_component.data[8]
data[9] => lpm_shiftreg:LPM_SHIFTREG_component.data[9]
data[10] => lpm_shiftreg:LPM_SHIFTREG_component.data[10]
data[11] => lpm_shiftreg:LPM_SHIFTREG_component.data[11]
data[12] => lpm_shiftreg:LPM_SHIFTREG_component.data[12]
data[13] => lpm_shiftreg:LPM_SHIFTREG_component.data[13]
data[14] => lpm_shiftreg:LPM_SHIFTREG_component.data[14]
enable => lpm_shiftreg:LPM_SHIFTREG_component.enable
load => lpm_shiftreg:LPM_SHIFTREG_component.load
shiftout <= lpm_shiftreg:LPM_SHIFTREG_component.shiftout


|Coursework|lpm_shiftreg0:inst17|lpm_shiftreg:LPM_SHIFTREG_component
data[0] => _.IN1
data[1] => _.IN1
data[2] => _.IN1
data[3] => _.IN1
data[4] => _.IN1
data[5] => _.IN1
data[6] => _.IN1
data[7] => _.IN1
data[8] => _.IN1
data[9] => _.IN1
data[10] => _.IN1
data[11] => _.IN1
data[12] => _.IN1
data[13] => _.IN1
data[14] => _.IN1
clock => dffs[14].CLK
clock => dffs[13].CLK
clock => dffs[12].CLK
clock => dffs[11].CLK
clock => dffs[10].CLK
clock => dffs[9].CLK
clock => dffs[8].CLK
clock => dffs[7].CLK
clock => dffs[6].CLK
clock => dffs[5].CLK
clock => dffs[4].CLK
clock => dffs[3].CLK
clock => dffs[2].CLK
clock => dffs[1].CLK
clock => dffs[0].CLK
enable => dffs[14].ENA
enable => dffs[13].ENA
enable => dffs[12].ENA
enable => dffs[11].ENA
enable => dffs[10].ENA
enable => dffs[9].ENA
enable => dffs[8].ENA
enable => dffs[7].ENA
enable => dffs[6].ENA
enable => dffs[5].ENA
enable => dffs[4].ENA
enable => dffs[3].ENA
enable => dffs[2].ENA
enable => dffs[1].ENA
enable => dffs[0].ENA
shiftin => _.IN1
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
aclr => dffs[14].IN0
aclr => dffs[14].IN0
aset => _.IN0
sclr => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
q[0] <= q[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= q[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= q[5].DB_MAX_OUTPUT_PORT_TYPE
q[6] <= q[6].DB_MAX_OUTPUT_PORT_TYPE
q[7] <= q[7].DB_MAX_OUTPUT_PORT_TYPE
q[8] <= q[8].DB_MAX_OUTPUT_PORT_TYPE
q[9] <= q[9].DB_MAX_OUTPUT_PORT_TYPE
q[10] <= q[10].DB_MAX_OUTPUT_PORT_TYPE
q[11] <= q[11].DB_MAX_OUTPUT_PORT_TYPE
q[12] <= q[12].DB_MAX_OUTPUT_PORT_TYPE
q[13] <= q[13].DB_MAX_OUTPUT_PORT_TYPE
q[14] <= q[14].DB_MAX_OUTPUT_PORT_TYPE
shiftout <= dffs[0].DB_MAX_OUTPUT_PORT_TYPE


|Coursework|lpm_constant1:inst11
result[0] <= lpm_constant:LPM_CONSTANT_component.result[0]


|Coursework|lpm_constant1:inst11|lpm_constant:LPM_CONSTANT_component
result[0] <= <GND>


|Coursework|lpm_constant0:inst9
result[0] <= lpm_constant:LPM_CONSTANT_component.result[0]


|Coursework|lpm_constant0:inst9|lpm_constant:LPM_CONSTANT_component
result[0] <= <VCC>


|Coursework|lpm_shiftreg2:inst20
aclr => lpm_shiftreg:LPM_SHIFTREG_component.aclr
clock => lpm_shiftreg:LPM_SHIFTREG_component.clock
data[0] => lpm_shiftreg:LPM_SHIFTREG_component.data[0]
data[1] => lpm_shiftreg:LPM_SHIFTREG_component.data[1]
data[2] => lpm_shiftreg:LPM_SHIFTREG_component.data[2]
data[3] => lpm_shiftreg:LPM_SHIFTREG_component.data[3]
data[4] => lpm_shiftreg:LPM_SHIFTREG_component.data[4]
data[5] => lpm_shiftreg:LPM_SHIFTREG_component.data[5]
data[6] => lpm_shiftreg:LPM_SHIFTREG_component.data[6]
data[7] => lpm_shiftreg:LPM_SHIFTREG_component.data[7]
data[8] => lpm_shiftreg:LPM_SHIFTREG_component.data[8]
data[9] => lpm_shiftreg:LPM_SHIFTREG_component.data[9]
data[10] => lpm_shiftreg:LPM_SHIFTREG_component.data[10]
data[11] => lpm_shiftreg:LPM_SHIFTREG_component.data[11]
enable => lpm_shiftreg:LPM_SHIFTREG_component.enable
load => lpm_shiftreg:LPM_SHIFTREG_component.load
q[0] <= lpm_shiftreg:LPM_SHIFTREG_component.q[0]
q[1] <= lpm_shiftreg:LPM_SHIFTREG_component.q[1]
q[2] <= lpm_shiftreg:LPM_SHIFTREG_component.q[2]
q[3] <= lpm_shiftreg:LPM_SHIFTREG_component.q[3]
q[4] <= lpm_shiftreg:LPM_SHIFTREG_component.q[4]
q[5] <= lpm_shiftreg:LPM_SHIFTREG_component.q[5]
q[6] <= lpm_shiftreg:LPM_SHIFTREG_component.q[6]
q[7] <= lpm_shiftreg:LPM_SHIFTREG_component.q[7]
q[8] <= lpm_shiftreg:LPM_SHIFTREG_component.q[8]
q[9] <= lpm_shiftreg:LPM_SHIFTREG_component.q[9]
q[10] <= lpm_shiftreg:LPM_SHIFTREG_component.q[10]
q[11] <= lpm_shiftreg:LPM_SHIFTREG_component.q[11]


|Coursework|lpm_shiftreg2:inst20|lpm_shiftreg:LPM_SHIFTREG_component
data[0] => _.IN1
data[1] => _.IN1
data[2] => _.IN1
data[3] => _.IN1
data[4] => _.IN1
data[5] => _.IN1
data[6] => _.IN1
data[7] => _.IN1
data[8] => _.IN1
data[9] => _.IN1
data[10] => _.IN1
data[11] => _.IN1
clock => dffs[11].CLK
clock => dffs[10].CLK
clock => dffs[9].CLK
clock => dffs[8].CLK
clock => dffs[7].CLK
clock => dffs[6].CLK
clock => dffs[5].CLK
clock => dffs[4].CLK
clock => dffs[3].CLK
clock => dffs[2].CLK
clock => dffs[1].CLK
clock => dffs[0].CLK
enable => dffs[11].ENA
enable => dffs[10].ENA
enable => dffs[9].ENA
enable => dffs[8].ENA
enable => dffs[7].ENA
enable => dffs[6].ENA
enable => dffs[5].ENA
enable => dffs[4].ENA
enable => dffs[3].ENA
enable => dffs[2].ENA
enable => dffs[1].ENA
enable => dffs[0].ENA
shiftin => _.IN1
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
aclr => dffs[11].IN0
aset => ~NO_FANOUT~
sclr => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
q[0] <= dffs[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= dffs[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= dffs[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= dffs[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= dffs[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= dffs[5].DB_MAX_OUTPUT_PORT_TYPE
q[6] <= dffs[6].DB_MAX_OUTPUT_PORT_TYPE
q[7] <= dffs[7].DB_MAX_OUTPUT_PORT_TYPE
q[8] <= dffs[8].DB_MAX_OUTPUT_PORT_TYPE
q[9] <= dffs[9].DB_MAX_OUTPUT_PORT_TYPE
q[10] <= dffs[10].DB_MAX_OUTPUT_PORT_TYPE
q[11] <= dffs[11].DB_MAX_OUTPUT_PORT_TYPE
shiftout <= shiftout.DB_MAX_OUTPUT_PORT_TYPE


|Coursework|add_parity_bit_n13:inst
data_13 <= inst10.DB_MAX_OUTPUT_PORT_TYPE
data_12 => inst10.IN0
data_11 => inst9.IN0
data_10 => inst8.IN0
data_9 => inst7.IN0
data_8 => inst6.IN0
data_7 => inst5.IN0
data_6 => inst4.IN0
data_5 => inst3.IN0
data_4 => inst2.IN0
data_3 => inst1.IN0
data_1 => inst.IN0
data_2 => inst.IN1


