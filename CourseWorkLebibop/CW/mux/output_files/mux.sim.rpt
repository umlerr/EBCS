Simulator report for mux
Wed May 15 16:56:47 2024
Quartus II 64-Bit Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. Simulator Summary
  3. Simulator Settings
  4. Simulation Waveforms
  5. Coverage Summary
  6. Complete 1/0-Value Coverage
  7. Missing 1-Value Coverage
  8. Missing 0-Value Coverage
  9. Simulator INI Usage
 10. Simulator Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+--------------------------------------------+
; Simulator Summary                          ;
+-----------------------------+--------------+
; Type                        ; Value        ;
+-----------------------------+--------------+
; Simulation Start Time       ; 0 ps         ;
; Simulation End Time         ; 4.2 us       ;
; Simulation Netlist Size     ; 181 nodes    ;
; Simulation Coverage         ;      75.00 % ;
; Total Number of Transitions ; 1225         ;
; Simulation Breakpoints      ; 0            ;
; Family                      ; Cyclone II   ;
+-----------------------------+--------------+


+----------------------------------------------------------------------------------------------------------------------------------------------------+
; Simulator Settings                                                                                                                                 ;
+--------------------------------------------------------------------------------------------+---------------------------------------+---------------+
; Option                                                                                     ; Setting                               ; Default Value ;
+--------------------------------------------------------------------------------------------+---------------------------------------+---------------+
; Simulation mode                                                                            ; Functional                            ; Timing        ;
; Start time                                                                                 ; 0 ns                                  ; 0 ns          ;
; Simulation results format                                                                  ; VWF                                   ;               ;
; Vector input source                                                                        ; D:/CODING/CADWork/CW/mux/Waveform.vwf ;               ;
; Add pins automatically to simulation output waveforms                                      ; On                                    ; On            ;
; Check outputs                                                                              ; Off                                   ; Off           ;
; Report simulation coverage                                                                 ; On                                    ; On            ;
; Display complete 1/0 value coverage report                                                 ; On                                    ; On            ;
; Display missing 1-value coverage report                                                    ; On                                    ; On            ;
; Display missing 0-value coverage report                                                    ; On                                    ; On            ;
; Detect setup and hold time violations                                                      ; Off                                   ; Off           ;
; Detect glitches                                                                            ; Off                                   ; Off           ;
; Disable timing delays in Timing Simulation                                                 ; Off                                   ; Off           ;
; Generate Signal Activity File                                                              ; Off                                   ; Off           ;
; Generate VCD File for PowerPlay Power Analyzer                                             ; Off                                   ; Off           ;
; Group bus channels in simulation results                                                   ; Off                                   ; Off           ;
; Preserve fewer signal transitions to reduce memory requirements                            ; On                                    ; On            ;
; Trigger vector comparison with the specified mode                                          ; INPUT_EDGE                            ; INPUT_EDGE    ;
; Disable setup and hold time violations detection in input registers of bi-directional pins ; Off                                   ; Off           ;
; Overwrite Waveform Inputs With Simulation Outputs                                          ; Off                                   ;               ;
; Perform Glitch Filtering in Timing Simulation                                              ; Auto                                  ; Auto          ;
+--------------------------------------------------------------------------------------------+---------------------------------------+---------------+


+----------------------+
; Simulation Waveforms ;
+----------------------+
Waveform report data cannot be output to ASCII.
Please use Quartus II 64-Bit to view the waveform report data.


+--------------------------------------------------------------------+
; Coverage Summary                                                   ;
+-----------------------------------------------------+--------------+
; Type                                                ; Value        ;
+-----------------------------------------------------+--------------+
; Total coverage as a percentage                      ;      75.00 % ;
; Total nodes checked                                 ; 181          ;
; Total output ports checked                          ; 184          ;
; Total output ports with complete 1/0-value coverage ; 138          ;
; Total output ports with no 1/0-value coverage       ; 40           ;
; Total output ports with no 1-value coverage         ; 40           ;
; Total output ports with no 0-value coverage         ; 46           ;
+-----------------------------------------------------+--------------+


The following table displays output ports that toggle between 1 and 0 during simulation.
+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Complete 1/0-Value Coverage                                                                                                                                                                                                                                                 ;
+---------------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+------------------+
; Node Name                                                                                                                 ; Output Port Name                                                                                                             ; Output Port Type ;
+---------------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+------------------+
; |mux|c_M                                                                                                                  ; |mux|c_M                                                                                                                     ; pin_out          ;
; |mux|inst3                                                                                                                ; |mux|inst3                                                                                                                   ; out0             ;
; |mux|c                                                                                                                    ; |mux|c                                                                                                                       ; out              ;
; |mux|d_s[2]                                                                                                               ; |mux|d_s[2]                                                                                                                  ; pin_out          ;
; |mux|d_s[1]                                                                                                               ; |mux|d_s[1]                                                                                                                  ; pin_out          ;
; |mux|speed                                                                                                                ; |mux|speed                                                                                                                   ; out              ;
; |mux|inst4                                                                                                                ; |mux|inst4                                                                                                                   ; out0             ;
; |mux|start                                                                                                                ; |mux|start                                                                                                                   ; out              ;
; |mux|x[10]                                                                                                                ; |mux|x[10]                                                                                                                   ; out              ;
; |mux|x[7]                                                                                                                 ; |mux|x[7]                                                                                                                    ; out              ;
; |mux|x[6]                                                                                                                 ; |mux|x[6]                                                                                                                    ; out              ;
; |mux|x[5]                                                                                                                 ; |mux|x[5]                                                                                                                    ; out              ;
; |mux|x[3]                                                                                                                 ; |mux|x[3]                                                                                                                    ; out              ;
; |mux|x[2]                                                                                                                 ; |mux|x[2]                                                                                                                    ; out              ;
; |mux|x[1]                                                                                                                 ; |mux|x[1]                                                                                                                    ; out              ;
; |mux|x[0]                                                                                                                 ; |mux|x[0]                                                                                                                    ; out              ;
; |mux|ready                                                                                                                ; |mux|ready                                                                                                                   ; pin_out          ;
; |mux|serial_code                                                                                                          ; |mux|serial_code                                                                                                             ; pin_out          ;
; |mux|data[13]                                                                                                             ; |mux|data[13]                                                                                                                ; pin_out          ;
; |mux|data[11]                                                                                                             ; |mux|data[11]                                                                                                                ; pin_out          ;
; |mux|data[8]                                                                                                              ; |mux|data[8]                                                                                                                 ; pin_out          ;
; |mux|data[7]                                                                                                              ; |mux|data[7]                                                                                                                 ; pin_out          ;
; |mux|data[6]                                                                                                              ; |mux|data[6]                                                                                                                 ; pin_out          ;
; |mux|data[4]                                                                                                              ; |mux|data[4]                                                                                                                 ; pin_out          ;
; |mux|data[1]                                                                                                              ; |mux|data[1]                                                                                                                 ; pin_out          ;
; |mux|load                                                                                                                 ; |mux|load                                                                                                                    ; out              ;
; |mux|paritet_bit:inst9|inst10                                                                                             ; |mux|paritet_bit:inst9|inst10                                                                                                ; out0             ;
; |mux|paritet_bit:inst9|inst9                                                                                              ; |mux|paritet_bit:inst9|inst9                                                                                                 ; out0             ;
; |mux|paritet_bit:inst9|inst8                                                                                              ; |mux|paritet_bit:inst9|inst8                                                                                                 ; out0             ;
; |mux|paritet_bit:inst9|inst7                                                                                              ; |mux|paritet_bit:inst9|inst7                                                                                                 ; out0             ;
; |mux|paritet_bit:inst9|inst6                                                                                              ; |mux|paritet_bit:inst9|inst6                                                                                                 ; out0             ;
; |mux|paritet_bit:inst9|inst5                                                                                              ; |mux|paritet_bit:inst9|inst5                                                                                                 ; out0             ;
; |mux|paritet_bit:inst9|inst4                                                                                              ; |mux|paritet_bit:inst9|inst4                                                                                                 ; out0             ;
; |mux|paritet_bit:inst9|inst3                                                                                              ; |mux|paritet_bit:inst9|inst3                                                                                                 ; out0             ;
; |mux|paritet_bit:inst9|inst2                                                                                              ; |mux|paritet_bit:inst9|inst2                                                                                                 ; out0             ;
; |mux|paritet_bit:inst9|inst1                                                                                              ; |mux|paritet_bit:inst9|inst1                                                                                                 ; out0             ;
; |mux|paritet_bit:inst9|inst                                                                                               ; |mux|paritet_bit:inst9|inst                                                                                                  ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~4                                                          ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~4                                                             ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~7                                                          ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~7                                                             ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~8                                                          ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~8                                                             ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~9                                                          ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~9                                                             ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~11                                                         ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~11                                                            ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~15                                                         ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~15                                                            ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~18                                                         ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~18                                                            ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~19                                                         ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~19                                                            ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~20                                                         ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~20                                                            ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~22                                                         ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~22                                                            ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~23                                                         ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~23                                                            ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~25                                                         ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~25                                                            ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~26                                                         ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~26                                                            ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~27                                                         ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~27                                                            ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~28                                                         ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~28                                                            ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~30                                                         ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~30                                                            ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~31                                                         ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~31                                                            ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~32                                                         ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~32                                                            ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~33                                                         ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~33                                                            ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~34                                                         ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~34                                                            ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~35                                                         ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~35                                                            ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~37                                                         ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~37                                                            ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|dffs[10]                                                     ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|dffs[10]                                                        ; regout           ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|dffs[7]                                                      ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|dffs[7]                                                         ; regout           ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|dffs[6]                                                      ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|dffs[6]                                                         ; regout           ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|dffs[5]                                                      ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|dffs[5]                                                         ; regout           ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|dffs[3]                                                      ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|dffs[3]                                                         ; regout           ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|dffs[0]                                                      ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|dffs[0]                                                         ; regout           ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|muxlut_result0w~0                                   ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|muxlut_result0w~0                                      ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~2                                                 ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~2                                                    ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~3                                                 ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~3                                                    ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~5                                                 ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~5                                                    ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|w_mux_outputs66w[0]~0                               ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|w_mux_outputs66w[0]~0                                  ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~6                                                 ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~6                                                    ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~7                                                 ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~7                                                    ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~9                                                 ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~9                                                    ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|w_mux_outputs66w[0]~1                               ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|w_mux_outputs66w[0]~1                                  ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|w_mux_outputs66w[0]                                 ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|w_mux_outputs66w[0]                                    ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|w_mux_outputs73w[3]~0                               ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|w_mux_outputs73w[3]~0                                  ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~16                                                ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~16                                                   ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|w_mux_outputs73w[3]~1                               ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|w_mux_outputs73w[3]~1                                  ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|w_mux_outputs73w[3]                                 ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|w_mux_outputs73w[3]                                    ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~20                                                ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~20                                                   ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~21                                                ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~21                                                   ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|w_mux_outputs73w[2]~2                               ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|w_mux_outputs73w[2]~2                                  ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~25                                                ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~25                                                   ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~27                                                ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~27                                                   ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|w_mux_outputs73w[2]~3                               ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|w_mux_outputs73w[2]~3                                  ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|w_mux_outputs73w[2]                                 ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|w_mux_outputs73w[2]                                    ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~29                                                ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~29                                                   ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~30                                                ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~30                                                   ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~32                                                ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~32                                                   ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~34                                                ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~34                                                   ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~36                                                ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~36                                                   ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|w_mux_outputs73w[1]~5                               ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|w_mux_outputs73w[1]~5                                  ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|w_mux_outputs73w[1]                                 ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|w_mux_outputs73w[1]                                    ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~39                                                ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~39                                                   ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|w_mux_outputs73w[0]~6                               ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|w_mux_outputs73w[0]~6                                  ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~42                                                ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~42                                                   ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~43                                                ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~43                                                   ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|w_mux_outputs73w[0]                                 ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|w_mux_outputs73w[0]                                    ; out0             ;
; |mux|ready_signal:inst11|inst5                                                                                            ; |mux|ready_signal:inst11|inst5                                                                                               ; out0             ;
; |mux|ready_signal:inst11|inst4                                                                                            ; |mux|ready_signal:inst11|inst4                                                                                               ; out0             ;
; |mux|ready_signal:inst11|lpm_counter0:inst|lpm_counter:LPM_COUNTER_component|cntr_7ni:auto_generated|counter_comb_bita0   ; |mux|ready_signal:inst11|lpm_counter0:inst|lpm_counter:LPM_COUNTER_component|cntr_7ni:auto_generated|counter_comb_bita0      ; combout          ;
; |mux|ready_signal:inst11|lpm_counter0:inst|lpm_counter:LPM_COUNTER_component|cntr_7ni:auto_generated|counter_comb_bita0   ; |mux|ready_signal:inst11|lpm_counter0:inst|lpm_counter:LPM_COUNTER_component|cntr_7ni:auto_generated|counter_comb_bita0~COUT ; cout             ;
; |mux|ready_signal:inst11|lpm_counter0:inst|lpm_counter:LPM_COUNTER_component|cntr_7ni:auto_generated|counter_comb_bita1   ; |mux|ready_signal:inst11|lpm_counter0:inst|lpm_counter:LPM_COUNTER_component|cntr_7ni:auto_generated|counter_comb_bita1      ; combout          ;
; |mux|ready_signal:inst11|lpm_counter0:inst|lpm_counter:LPM_COUNTER_component|cntr_7ni:auto_generated|counter_comb_bita1   ; |mux|ready_signal:inst11|lpm_counter0:inst|lpm_counter:LPM_COUNTER_component|cntr_7ni:auto_generated|counter_comb_bita1~COUT ; cout             ;
; |mux|ready_signal:inst11|lpm_counter0:inst|lpm_counter:LPM_COUNTER_component|cntr_7ni:auto_generated|counter_comb_bita2   ; |mux|ready_signal:inst11|lpm_counter0:inst|lpm_counter:LPM_COUNTER_component|cntr_7ni:auto_generated|counter_comb_bita2      ; combout          ;
; |mux|ready_signal:inst11|lpm_counter0:inst|lpm_counter:LPM_COUNTER_component|cntr_7ni:auto_generated|counter_comb_bita2   ; |mux|ready_signal:inst11|lpm_counter0:inst|lpm_counter:LPM_COUNTER_component|cntr_7ni:auto_generated|counter_comb_bita2~COUT ; cout             ;
; |mux|ready_signal:inst11|lpm_counter0:inst|lpm_counter:LPM_COUNTER_component|cntr_7ni:auto_generated|counter_comb_bita3   ; |mux|ready_signal:inst11|lpm_counter0:inst|lpm_counter:LPM_COUNTER_component|cntr_7ni:auto_generated|counter_comb_bita3      ; combout          ;
; |mux|ready_signal:inst11|lpm_counter0:inst|lpm_counter:LPM_COUNTER_component|cntr_7ni:auto_generated|counter_comb_bita3   ; |mux|ready_signal:inst11|lpm_counter0:inst|lpm_counter:LPM_COUNTER_component|cntr_7ni:auto_generated|counter_comb_bita3~COUT ; cout             ;
; |mux|ready_signal:inst11|lpm_counter0:inst|lpm_counter:LPM_COUNTER_component|cntr_7ni:auto_generated|counter_comb_bita4   ; |mux|ready_signal:inst11|lpm_counter0:inst|lpm_counter:LPM_COUNTER_component|cntr_7ni:auto_generated|counter_comb_bita4      ; combout          ;
; |mux|ready_signal:inst11|lpm_counter0:inst|lpm_counter:LPM_COUNTER_component|cntr_7ni:auto_generated|counter_reg_bit1a[4] ; |mux|ready_signal:inst11|lpm_counter0:inst|lpm_counter:LPM_COUNTER_component|cntr_7ni:auto_generated|safe_q[4]               ; regout           ;
; |mux|ready_signal:inst11|lpm_counter0:inst|lpm_counter:LPM_COUNTER_component|cntr_7ni:auto_generated|counter_reg_bit1a[3] ; |mux|ready_signal:inst11|lpm_counter0:inst|lpm_counter:LPM_COUNTER_component|cntr_7ni:auto_generated|safe_q[3]               ; regout           ;
; |mux|ready_signal:inst11|lpm_counter0:inst|lpm_counter:LPM_COUNTER_component|cntr_7ni:auto_generated|counter_reg_bit1a[2] ; |mux|ready_signal:inst11|lpm_counter0:inst|lpm_counter:LPM_COUNTER_component|cntr_7ni:auto_generated|safe_q[2]               ; regout           ;
; |mux|ready_signal:inst11|lpm_counter0:inst|lpm_counter:LPM_COUNTER_component|cntr_7ni:auto_generated|counter_reg_bit1a[1] ; |mux|ready_signal:inst11|lpm_counter0:inst|lpm_counter:LPM_COUNTER_component|cntr_7ni:auto_generated|safe_q[1]               ; regout           ;
; |mux|ready_signal:inst11|lpm_counter0:inst|lpm_counter:LPM_COUNTER_component|cntr_7ni:auto_generated|counter_reg_bit1a[0] ; |mux|ready_signal:inst11|lpm_counter0:inst|lpm_counter:LPM_COUNTER_component|cntr_7ni:auto_generated|safe_q[0]               ; regout           ;
; |mux|ready_signal:inst11|lpm_decode0:inst1|lpm_decode:LPM_DECODE_component|decode_b8f:auto_generated|w_anode17w[3]        ; |mux|ready_signal:inst11|lpm_decode0:inst1|lpm_decode:LPM_DECODE_component|decode_b8f:auto_generated|w_anode17w[3]           ; out0             ;
; |mux|ready_signal:inst11|lpm_decode0:inst1|lpm_decode:LPM_DECODE_component|decode_b8f:auto_generated|w_anode17w[2]        ; |mux|ready_signal:inst11|lpm_decode0:inst1|lpm_decode:LPM_DECODE_component|decode_b8f:auto_generated|w_anode17w[2]           ; out0             ;
; |mux|ready_signal:inst11|lpm_decode0:inst1|lpm_decode:LPM_DECODE_component|decode_b8f:auto_generated|w_anode17w[1]        ; |mux|ready_signal:inst11|lpm_decode0:inst1|lpm_decode:LPM_DECODE_component|decode_b8f:auto_generated|w_anode17w[1]           ; out0             ;
; |mux|ready_signal:inst11|lpm_decode0:inst1|lpm_decode:LPM_DECODE_component|decode_b8f:auto_generated|w_anode198w[2]       ; |mux|ready_signal:inst11|lpm_decode0:inst1|lpm_decode:LPM_DECODE_component|decode_b8f:auto_generated|w_anode198w[2]          ; out0             ;
; |mux|ready_signal:inst11|lpm_decode0:inst1|lpm_decode:LPM_DECODE_component|decode_b8f:auto_generated|w_anode208w[3]       ; |mux|ready_signal:inst11|lpm_decode0:inst1|lpm_decode:LPM_DECODE_component|decode_b8f:auto_generated|w_anode208w[3]          ; out0             ;
; |mux|ready_signal:inst11|lpm_decode0:inst1|lpm_decode:LPM_DECODE_component|decode_b8f:auto_generated|w_anode208w[2]       ; |mux|ready_signal:inst11|lpm_decode0:inst1|lpm_decode:LPM_DECODE_component|decode_b8f:auto_generated|w_anode208w[2]          ; out0             ;
; |mux|ready_signal:inst11|lpm_decode0:inst1|lpm_decode:LPM_DECODE_component|decode_b8f:auto_generated|w_anode208w[1]       ; |mux|ready_signal:inst11|lpm_decode0:inst1|lpm_decode:LPM_DECODE_component|decode_b8f:auto_generated|w_anode208w[1]          ; out0             ;
; |mux|ready_signal:inst11|lpm_decode0:inst1|lpm_decode:LPM_DECODE_component|decode_b8f:auto_generated|w_anode3w[2]         ; |mux|ready_signal:inst11|lpm_decode0:inst1|lpm_decode:LPM_DECODE_component|decode_b8f:auto_generated|w_anode3w[2]            ; out0             ;
; |mux|lpm_shiftreg1:inst7|lpm_shiftreg:LPM_SHIFTREG_component|_~2                                                          ; |mux|lpm_shiftreg1:inst7|lpm_shiftreg:LPM_SHIFTREG_component|_~2                                                             ; out0             ;
; |mux|lpm_shiftreg1:inst7|lpm_shiftreg:LPM_SHIFTREG_component|_~5                                                          ; |mux|lpm_shiftreg1:inst7|lpm_shiftreg:LPM_SHIFTREG_component|_~5                                                             ; out0             ;
; |mux|lpm_shiftreg1:inst7|lpm_shiftreg:LPM_SHIFTREG_component|_~6                                                          ; |mux|lpm_shiftreg1:inst7|lpm_shiftreg:LPM_SHIFTREG_component|_~6                                                             ; out0             ;
; |mux|lpm_shiftreg1:inst7|lpm_shiftreg:LPM_SHIFTREG_component|_~8                                                          ; |mux|lpm_shiftreg1:inst7|lpm_shiftreg:LPM_SHIFTREG_component|_~8                                                             ; out0             ;
; |mux|lpm_shiftreg1:inst7|lpm_shiftreg:LPM_SHIFTREG_component|_~9                                                          ; |mux|lpm_shiftreg1:inst7|lpm_shiftreg:LPM_SHIFTREG_component|_~9                                                             ; out0             ;
; |mux|lpm_shiftreg1:inst7|lpm_shiftreg:LPM_SHIFTREG_component|_~10                                                         ; |mux|lpm_shiftreg1:inst7|lpm_shiftreg:LPM_SHIFTREG_component|_~10                                                            ; out0             ;
; |mux|lpm_shiftreg1:inst7|lpm_shiftreg:LPM_SHIFTREG_component|dffs[2]                                                      ; |mux|lpm_shiftreg1:inst7|lpm_shiftreg:LPM_SHIFTREG_component|dffs[2]                                                         ; regout           ;
; |mux|lpm_shiftreg1:inst7|lpm_shiftreg:LPM_SHIFTREG_component|dffs[1]                                                      ; |mux|lpm_shiftreg1:inst7|lpm_shiftreg:LPM_SHIFTREG_component|dffs[1]                                                         ; regout           ;
; |mux|output_tact:inst10|inst5                                                                                             ; |mux|output_tact:inst10|inst5                                                                                                ; regout           ;
; |mux|output_tact:inst10|inst5~0                                                                                           ; |mux|output_tact:inst10|inst5~0                                                                                              ; out0             ;
; |mux|output_tact:inst10|inst3                                                                                             ; |mux|output_tact:inst10|inst3                                                                                                ; regout           ;
; |mux|output_tact:inst10|lpm_mux0:inst2|lpm_mux:LPM_MUX_component|mux_23e:auto_generated|data0_wire[0]                     ; |mux|output_tact:inst10|lpm_mux0:inst2|lpm_mux:LPM_MUX_component|mux_23e:auto_generated|data0_wire[0]                        ; out0             ;
; |mux|output_tact:inst10|lpm_mux0:inst2|lpm_mux:LPM_MUX_component|mux_23e:auto_generated|data2_wire[0]                     ; |mux|output_tact:inst10|lpm_mux0:inst2|lpm_mux:LPM_MUX_component|mux_23e:auto_generated|data2_wire[0]                        ; out0             ;
; |mux|output_tact:inst10|lpm_mux0:inst2|lpm_mux:LPM_MUX_component|mux_23e:auto_generated|_~0                               ; |mux|output_tact:inst10|lpm_mux0:inst2|lpm_mux:LPM_MUX_component|mux_23e:auto_generated|_~0                                  ; out0             ;
; |mux|output_tact:inst10|lpm_mux0:inst2|lpm_mux:LPM_MUX_component|mux_23e:auto_generated|result_node[0]~0                  ; |mux|output_tact:inst10|lpm_mux0:inst2|lpm_mux:LPM_MUX_component|mux_23e:auto_generated|result_node[0]~0                     ; out0             ;
; |mux|output_tact:inst10|lpm_mux0:inst2|lpm_mux:LPM_MUX_component|mux_23e:auto_generated|result_node[0]                    ; |mux|output_tact:inst10|lpm_mux0:inst2|lpm_mux:LPM_MUX_component|mux_23e:auto_generated|result_node[0]                       ; out0             ;
+---------------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+------------------+


The following table displays output ports that do not toggle to 1 during simulation.
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Missing 1-Value Coverage                                                                                                                                                                                                         ;
+-------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+------------------+
; Node Name                                                                                             ; Output Port Name                                                                                      ; Output Port Type ;
+-------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+------------------+
; |mux|d_s[0]                                                                                           ; |mux|d_s[0]                                                                                           ; pin_out          ;
; |mux|reset                                                                                            ; |mux|reset                                                                                            ; out              ;
; |mux|stop                                                                                             ; |mux|stop                                                                                             ; out              ;
; |mux|x[11]                                                                                            ; |mux|x[11]                                                                                            ; out              ;
; |mux|x[9]                                                                                             ; |mux|x[9]                                                                                             ; out              ;
; |mux|x[8]                                                                                             ; |mux|x[8]                                                                                             ; out              ;
; |mux|x[4]                                                                                             ; |mux|x[4]                                                                                             ; out              ;
; |mux|data[14]                                                                                         ; |mux|data[14]                                                                                         ; pin_out          ;
; |mux|data[12]                                                                                         ; |mux|data[12]                                                                                         ; pin_out          ;
; |mux|data[10]                                                                                         ; |mux|data[10]                                                                                         ; pin_out          ;
; |mux|data[9]                                                                                          ; |mux|data[9]                                                                                          ; pin_out          ;
; |mux|data[5]                                                                                          ; |mux|data[5]                                                                                          ; pin_out          ;
; |mux|data[2]                                                                                          ; |mux|data[2]                                                                                          ; pin_out          ;
; |mux|data[0]                                                                                          ; |mux|data[0]                                                                                          ; pin_out          ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~3                                      ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~3                                      ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~5                                      ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~5                                      ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~6                                      ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~6                                      ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~10                                     ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~10                                     ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~13                                     ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~13                                     ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~14                                     ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~14                                     ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~16                                     ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~16                                     ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~17                                     ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~17                                     ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~21                                     ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~21                                     ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~24                                     ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~24                                     ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~29                                     ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~29                                     ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|dffs[11]                                 ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|dffs[11]                                 ; regout           ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|dffs[9]                                  ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|dffs[9]                                  ; regout           ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|dffs[8]                                  ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|dffs[8]                                  ; regout           ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|dffs[4]                                  ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|dffs[4]                                  ; regout           ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|dffs[1]                                  ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|dffs[1]                                  ; regout           ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~18                            ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~18                            ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~23                            ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~23                            ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~24                            ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~24                            ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|w_mux_outputs73w[1]~4           ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|w_mux_outputs73w[1]~4           ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~33                            ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~33                            ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~41                            ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~41                            ; out0             ;
; |mux|lpm_shiftreg1:inst7|lpm_shiftreg:LPM_SHIFTREG_component|_~3                                      ; |mux|lpm_shiftreg1:inst7|lpm_shiftreg:LPM_SHIFTREG_component|_~3                                      ; out0             ;
; |mux|lpm_shiftreg1:inst7|lpm_shiftreg:LPM_SHIFTREG_component|_~7                                      ; |mux|lpm_shiftreg1:inst7|lpm_shiftreg:LPM_SHIFTREG_component|_~7                                      ; out0             ;
; |mux|lpm_shiftreg1:inst7|lpm_shiftreg:LPM_SHIFTREG_component|dffs[0]                                  ; |mux|lpm_shiftreg1:inst7|lpm_shiftreg:LPM_SHIFTREG_component|dffs[0]                                  ; regout           ;
; |mux|output_tact:inst10|lpm_mux0:inst2|lpm_mux:LPM_MUX_component|mux_23e:auto_generated|data1_wire[0] ; |mux|output_tact:inst10|lpm_mux0:inst2|lpm_mux:LPM_MUX_component|mux_23e:auto_generated|data1_wire[0] ; out0             ;
+-------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+------------------+


The following table displays output ports that do not toggle to 0 during simulation.
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Missing 0-Value Coverage                                                                                                                                                                                                         ;
+-------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+------------------+
; Node Name                                                                                             ; Output Port Name                                                                                      ; Output Port Type ;
+-------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+------------------+
; |mux|d_s[0]                                                                                           ; |mux|d_s[0]                                                                                           ; pin_out          ;
; |mux|reset                                                                                            ; |mux|reset                                                                                            ; out              ;
; |mux|stop                                                                                             ; |mux|stop                                                                                             ; out              ;
; |mux|x[11]                                                                                            ; |mux|x[11]                                                                                            ; out              ;
; |mux|x[9]                                                                                             ; |mux|x[9]                                                                                             ; out              ;
; |mux|x[8]                                                                                             ; |mux|x[8]                                                                                             ; out              ;
; |mux|x[4]                                                                                             ; |mux|x[4]                                                                                             ; out              ;
; |mux|data[14]                                                                                         ; |mux|data[14]                                                                                         ; pin_out          ;
; |mux|data[12]                                                                                         ; |mux|data[12]                                                                                         ; pin_out          ;
; |mux|data[10]                                                                                         ; |mux|data[10]                                                                                         ; pin_out          ;
; |mux|data[9]                                                                                          ; |mux|data[9]                                                                                          ; pin_out          ;
; |mux|data[5]                                                                                          ; |mux|data[5]                                                                                          ; pin_out          ;
; |mux|data[3]                                                                                          ; |mux|data[3]                                                                                          ; pin_out          ;
; |mux|data[2]                                                                                          ; |mux|data[2]                                                                                          ; pin_out          ;
; |mux|data[0]                                                                                          ; |mux|data[0]                                                                                          ; pin_out          ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~3                                      ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~3                                      ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~5                                      ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~5                                      ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~6                                      ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~6                                      ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~10                                     ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~10                                     ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~12                                     ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~12                                     ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~13                                     ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~13                                     ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~14                                     ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~14                                     ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~16                                     ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~16                                     ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~17                                     ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~17                                     ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~21                                     ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~21                                     ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~24                                     ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~24                                     ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~29                                     ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~29                                     ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~36                                     ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|_~36                                     ; out0             ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|dffs[11]                                 ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|dffs[11]                                 ; regout           ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|dffs[9]                                  ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|dffs[9]                                  ; regout           ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|dffs[8]                                  ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|dffs[8]                                  ; regout           ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|dffs[4]                                  ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|dffs[4]                                  ; regout           ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|dffs[2]                                  ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|dffs[2]                                  ; regout           ;
; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|dffs[1]                                  ; |mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|dffs[1]                                  ; regout           ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~15                            ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~15                            ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~18                            ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~18                            ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~23                            ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~23                            ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~24                            ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~24                            ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|w_mux_outputs73w[1]~4           ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|w_mux_outputs73w[1]~4           ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~33                            ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~33                            ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~38                            ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~38                            ; out0             ;
; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~41                            ; |mux|lpm_mux1:inst12|lpm_mux:LPM_MUX_component|mux_q4e:auto_generated|_~41                            ; out0             ;
; |mux|lpm_shiftreg1:inst7|lpm_shiftreg:LPM_SHIFTREG_component|_~3                                      ; |mux|lpm_shiftreg1:inst7|lpm_shiftreg:LPM_SHIFTREG_component|_~3                                      ; out0             ;
; |mux|lpm_shiftreg1:inst7|lpm_shiftreg:LPM_SHIFTREG_component|_~7                                      ; |mux|lpm_shiftreg1:inst7|lpm_shiftreg:LPM_SHIFTREG_component|_~7                                      ; out0             ;
; |mux|lpm_shiftreg1:inst7|lpm_shiftreg:LPM_SHIFTREG_component|dffs[0]                                  ; |mux|lpm_shiftreg1:inst7|lpm_shiftreg:LPM_SHIFTREG_component|dffs[0]                                  ; regout           ;
; |mux|output_tact:inst10|lpm_mux0:inst2|lpm_mux:LPM_MUX_component|mux_23e:auto_generated|data1_wire[0] ; |mux|output_tact:inst10|lpm_mux0:inst2|lpm_mux:LPM_MUX_component|mux_23e:auto_generated|data1_wire[0] ; out0             ;
+-------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+------------------+


+---------------------+
; Simulator INI Usage ;
+--------+------------+
; Option ; Usage      ;
+--------+------------+


+--------------------+
; Simulator Messages ;
+--------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit Simulator
    Info: Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition
    Info: Processing started: Wed May 15 16:56:46 2024
Info: Command: quartus_sim --simulation_results_format=VWF mux -c mux
Info (324025): Using vector source file "D:/CODING/CADWork/CW/mux/Waveform.vwf"
Info (310003): Option to preserve fewer signal transitions to reduce memory requirements is enabled
    Info (310004): Simulation has been partitioned into sub-simulations according to the maximum transition count determined by the engine. Transitions from memory will be flushed out to disk at the end of each sub-simulation to reduce memory requirements.
Warning (324036): Found clock-sensitive change during active clock edge at time 3.76 us on register "|mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|dffs[11]"
Warning (324036): Found clock-sensitive change during active clock edge at time 3.76 us on register "|mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|dffs[9]"
Warning (324036): Found clock-sensitive change during active clock edge at time 3.76 us on register "|mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|dffs[6]"
Warning (324036): Found clock-sensitive change during active clock edge at time 3.76 us on register "|mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|dffs[5]"
Warning (324036): Found clock-sensitive change during active clock edge at time 3.76 us on register "|mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|dffs[4]"
Warning (324036): Found clock-sensitive change during active clock edge at time 3.76 us on register "|mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|dffs[2]"
Warning (324036): Found clock-sensitive change during active clock edge at time 3.84 us on register "|mux|lpm_shiftreg2:inst8|lpm_shiftreg:LPM_SHIFTREG_component|dffs[1]"
Warning (324036): Found clock-sensitive change during active clock edge at time 3.84 us on register "|mux|lpm_shiftreg1:inst7|lpm_shiftreg:LPM_SHIFTREG_component|dffs[2]"
Warning (324036): Found clock-sensitive change during active clock edge at time 3.84 us on register "|mux|lpm_shiftreg1:inst7|lpm_shiftreg:LPM_SHIFTREG_component|dffs[0]"
Info (310002): Simulation partitioned into 1 sub-simulations
Info (328053): Simulation coverage is      75.00 %
Info (328052): Number of transitions in simulation is 1225
Info (324045): Vector file mux.sim.vwf is saved in VWF text format. You can compress it into CVWF format in order to reduce file size. For more details please refer to the Quartus II Help.
Info: Quartus II 64-Bit Simulator was successful. 0 errors, 9 warnings
    Info: Peak virtual memory: 4442 megabytes
    Info: Processing ended: Wed May 15 16:56:47 2024
    Info: Elapsed time: 00:00:01
    Info: Total CPU time (on all processors): 00:00:00


